{"version":3,"sources":["components/AddCategory.js","helpers/getGifs.js","components/GifGridItem.js","components/GifGrid.js","hooks/useFetchGifs.js","GifExpertApp.js","index.js"],"names":["AddCategory","setCategories","useState","inputValue","setInputValue","onSubmit","e","preventDefault","trim","length","cats","type","value","onChange","target","getGifs","category","a","url","encodeURI","fetch","resp","json","data","gifs","map","img","id","title","images","downsized_medium","GifGridItem","className","src","alt","GifGrid","loading","state","setstate","useEffect","then","imgs","useFetchGifs","console","log","GifExpertApp","categories","ReactDOM","render","document","getElementById"],"mappings":"qMAIaA,EAAc,SAAC,GAAyB,IAAtBC,EAAqB,EAArBA,cAAqB,EACfC,mBAAS,IADM,mBAC5CC,EAD4C,KAChCC,EADgC,KAiBnD,OACC,8BACC,sBAAMC,SAZa,SAACC,GACrBA,EAAEC,iBAEGJ,EAAWK,OAAOC,OAAS,IAC/BR,GAAe,SAAAS,GAAI,OAAKP,GAAL,mBAAoBO,OACvCN,EAAc,MAOd,SACC,uBACCO,KAAK,OACLC,MAAQT,EACRU,SApBsB,SAACP,GAC1BF,EAAeE,EAAEQ,OAAOF,e,+BCRbG,EAAO,uCAAG,WAAOC,GAAP,uBAAAC,EAAA,6DAChBC,EADgB,iDACiCC,UAAWH,GAD5C,+DAGHI,MAAOF,GAHJ,cAGhBG,EAHgB,gBAICA,EAAKC,OAJN,uBAIdC,EAJc,EAIdA,KAEFC,EAAOD,EAAKE,KAAK,SAAAC,GAAQ,IAAD,EAC7B,MAAO,CACNC,GAAID,EAAIC,GACRC,MAAOF,EAAIE,MACXV,IAAG,UAAEQ,EAAIG,cAAN,aAAE,EAAYC,iBAAiBZ,QAVd,kBAcfM,GAde,4CAAH,sDCEPO,EAAc,SAAC,GAAqB,EAApBJ,GAAqB,IAAjBC,EAAgB,EAAhBA,MAAOV,EAAS,EAATA,IACvC,OACC,sBAAKc,UAAU,yCAAf,UACC,qBAAKC,IAAMf,EAAMgB,IAAMN,IACvB,4BAAKA,QCDKO,EAAU,SAAC,GAAoB,IAAjBnB,EAAgB,EAAhBA,SAAgB,ECFf,SAAEA,GAAe,IAAD,EACjBd,mBAAS,CAClCqB,KAAM,GACNa,SAAS,IAHiC,mBACpCC,EADoC,KAC7BC,EAD6B,KAgB3C,OAVAC,qBAAU,WACTxB,EAASC,GACPwB,MAAM,SAAAC,GACNH,EAAS,CACRf,KAAMkB,EACNL,SAAS,SAGV,CAACpB,IAEGqB,EDZwBK,CAAc1B,GAAjCa,EAF8B,EAEnCN,KAAaa,EAFsB,EAEtBA,QAGpB,OAFAO,QAAQC,IAAIR,GAGX,qCACC,oBAAIJ,UAAU,oCAAd,SAAoDhB,IAClDoB,GAAW,mBAAGJ,UAAU,mCAAb,qBACb,qBAAKA,UAAU,YAAf,SAEEH,EAAOJ,KAAI,SAACC,GAAD,OACV,cAAC,EAAD,eAEMA,GADAA,EAAIC,aEdHkB,EAAe,WAAO,IAAD,EAEG3C,mBAAS,CAAC,cAFb,mBAE1B4C,EAF0B,KAEd7C,EAFc,KAIjC,OACC,gCACC,8CACA,cAAC,EAAD,CAAaA,cAAgBA,IAC7B,uBAIC6C,EAAWrB,KAAK,SAAET,GAAF,OACf,cAAC,EAAD,CAECA,SAAWA,GADLA,U,MCXZ+B,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.af233c16.chunk.js","sourcesContent":["import React, { useState } from 'react';\r\n\r\nimport PropTypes from 'prop-types';\r\n\r\nexport const AddCategory = ( { setCategories } ) => {\r\n\tconst [inputValue, setInputValue] = useState('');\r\n\t\r\n\tconst handleInputChange = (e) => {\r\n\t\tsetInputValue( e.target.value );\r\n\t}\r\n\r\n\tconst handleSubmit = (e) => {\r\n\t\te.preventDefault();\r\n\r\n\t\tif ( inputValue.trim().length > 2 ) {\r\n\t\t\tsetCategories( cats => [inputValue, ...cats]);\r\n\t\t\tsetInputValue('');\r\n\t\t}\r\n\t\t\r\n\t}\r\n\r\n\treturn (\r\n\t\t<div>\r\n\t\t\t<form onSubmit={ handleSubmit }>\r\n\t\t\t\t<input\r\n\t\t\t\t\ttype=\"text\"\r\n\t\t\t\t\tvalue={ inputValue }\r\n\t\t\t\t\tonChange={ handleInputChange }\r\n\t\t\t\t/>\r\n\t\t\t</form>\r\n\t\t</div>\r\n\t)\r\n}\r\n\r\nAddCategory.propTypes = {\r\n\tsetCategories: PropTypes.func.isRequired,\r\n}\r\n","export const getGifs = async( category ) => {\r\n\tconst url = `https://api.giphy.com/v1/gifs/search?q=${ encodeURI( category ) }&limit=10&api_key=84aPzogRi0ccnrpbgLvNPoYGGrBKkmGZ`;\r\n\r\n\tconst resp = await fetch( url );\r\n\tconst { data } = await resp.json();\r\n\r\n\tconst gifs = data.map( img => {\r\n\t\treturn {\r\n\t\t\tid: img.id,\r\n\t\t\ttitle: img.title,\r\n\t\t\turl: img.images?.downsized_medium.url\r\n\t\t}\r\n\t})\r\n\r\n\treturn gifs;\r\n}","import React from 'react'\r\n\r\nexport const GifGridItem = ({id, title, url}) => {\r\n\treturn (\r\n\t\t<div className=\"card animate__animated animate__fadeIn\">\r\n\t\t\t<img src={ url } alt={ title } />\r\n\t\t\t<p>{ title }</p>\r\n\t\t</div>\r\n\t)\r\n}\r\n","// import React, { useState, useEffect } from 'react'\r\nimport React from 'react'\r\nimport { useFetchGifs } from '../hooks/useFetchGifs';\r\nimport { GifGridItem } from './GifGridItem';\r\n\r\nexport const GifGrid = ( { category } ) => {\r\n\r\n\tconst {data:images, loading} = useFetchGifs( category );\r\n\tconsole.log(loading)\r\n\r\n\treturn (\r\n\t\t<>\r\n\t\t\t<h3 className=\"animate__animated animate__fadeIn\">{ category }</h3>\r\n\t\t\t{ loading && <p className=\"animate__animated animate__flash\">Loading</p>}\r\n\t\t\t<div className=\"card-grid\">\r\n\t\t\t\t{\r\n\t\t\t\t\timages.map((img) => (\r\n\t\t\t\t\t\t<GifGridItem \r\n\t\t\t\t\t\t\tkey={img.id} \r\n\t\t\t\t\t\t\t{ ...img } \r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t))\r\n\t\t\t\t}\r\n\t\t\t</div>\r\n\t\t</>\r\n\t)\r\n}\r\n","import { useEffect, useState } from \"react\"\r\nimport { getGifs } from \"../helpers/getGifs\";\r\n\r\nexport const useFetchGifs = ( category ) => {\r\n\tconst [state, setstate] = useState({\r\n\t\tdata: [],\r\n\t\tloading: true\r\n\t});\r\n\r\n\tuseEffect(() => {\r\n\t\tgetGifs( category )\r\n\t\t\t.then( imgs => {\r\n\t\t\t\tsetstate({\r\n\t\t\t\t\tdata: imgs,\r\n\t\t\t\t\tloading: false,\r\n\t\t\t\t});\r\n\t\t\t})\r\n\t}, [category])\r\n\r\n\treturn state;\r\n}","import React, { useState } from 'react'\r\nimport { AddCategory } from './components/AddCategory';\r\nimport { GifGrid } from './components/GifGrid';\r\n\r\nexport const GifExpertApp = () => {\r\n\t\r\n\tconst [categories, setCategories] = useState(['One Punch']);\r\n\t\r\n\treturn (\r\n\t\t<div>\r\n\t\t\t<h2>GifExpertApp</h2>\r\n\t\t\t<AddCategory setCategories={ setCategories } />\r\n\t\t\t<hr />\r\n\t\t\t\r\n\t\t\t\r\n\t\t\t{ \r\n\t\t\t\tcategories.map( ( category ) => (\r\n\t\t\t\t\t<GifGrid \r\n\t\t\t\t\t\tkey={ category }\r\n\t\t\t\t\t\tcategory={ category } \r\n\t\t\t\t\t/>\r\n\t\t\t\t))\r\n\t\t\t}\r\n\t\t</div>\r\n\t)\r\n}\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport { GifExpertApp } from './GifExpertApp';\n\nimport './index.css';\n\nReactDOM.render(\n  <GifExpertApp />,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}